/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    group = 'de.uniba.sme.bambirds'
    version = '20.0'
    repositories {
        // Use jcenter for resolving dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
        mavenCentral()
    }

    dependencies {
        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
        implementation 'org.apache.commons:commons-lang3:3.9'

        // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
        implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3'

        // Use JUnit test framework
        testImplementation 'junit:junit:4.12'
    }

    test {
        ignoreFailures = true
    }
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.1-jre'

    implementation project(':common')
    implementation project(':vision')
    implementation project(':client')
    implementation project(':level_selection')
    implementation project(':planner')
    
}

application {
    // Define the main class for the application.
    mainClassName = 'de.uniba.sme.bambirds.BamBirds'
}

jar {
    manifest {
        attributes 'Main-Class': 'de.uniba.sme.bambirds.BamBirds'
    }
}

project(':vision') {
    dependencies {
        implementation project(':common')
    }
}

project(':client') {
    dependencies {
        implementation project(':common')
    }
}

project(':planner') {
    dependencies {
        implementation project(':common')
    }
}

project(':level_selection') {
    dependencies {
        implementation project(':common')
    }
}

project(':debugging') {
    dependencies {
        implementation project(':common')
        implementation project(':vision')
        implementation project(':client')
        implementation project(':planner')
        implementation project(':level_selection')
    }
}

tasks.register("run_server", Exec){
    description = "Runs the ABServer for AngryBirds in Chrome"
    group = 'application'
    workingDir "$projectDir/game/abV1.33/"
    commandLine 'java', '-jar', 'ABServer.jar'
}

tasks.register("run_server_old", Exec){
    description = "Runs the old ABServer for AngryBirds in Chrome"
    group = 'application'
    workingDir "$projectDir/game/abV1.32/"
    commandLine 'java', '-jar', 'ABServer.jar'
}

