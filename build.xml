<project name="BamBird" default="dist" basedir=".">
    <description>
        The BamBird agent for the AI Birds competition.

        The Prolog files need to be in the current working directory for the
        agent to find them.
    </description>

    <property name="build" value="build"/>
    <property name="dist" location="dist"/>
    <property name="src" value="src/Java/src"/>
    <property name="test" value="src/Java/test"/>
    <property name="lib" location="src/Java/jars"/>
    <property name="prolog" location="src/Prolog"/>

    <!-- default values for run target arguments -->
    <property name="host" value="localhost"/>
    <property name="team" value="0"/>
    <property name="swipl" value="swipl"/>
    <property name="level" value="1"/>
    <property name="rounds" value="-1"/>
    <property name="range" value="0"/>

    
    <!-- default values for run-server and run-server-old -->
    <property name="time" value="30"/>
    <property name="levels" value="21"/>


    <path id="libs">
        <pathelement location="${lib}/commons-codec-1.7.jar"/>
        <pathelement location="${lib}/dyn4j-3.2.1.jar"/>
        <pathelement location="${lib}/Jama-1.0.2.jar"/>
        <pathelement location="${lib}/json-simple-1.1.1.jar"/>
        <pathelement location="${lib}/junit-4.12.jar"/>
        <pathelement location="${lib}/WebSocket.jar"/>
    </path>

    <target name="prepare" description="Create output directories.">
        <tstamp/>
        <mkdir dir="${build}"/>
        <mkdir dir="${build}/Prolog"/>
    </target>

    <target name="compile" depends="prepare" description="Compile Java code and copy Prolog code.">
        <javac srcdir="${src}" destdir="${build}" includeantruntime="no">
          <classpath refid="libs"/>
        </javac>
        <!-- Compile tests as well; some IDEs get seizures when only parts of their configured sources are compiled -->
        <javac srcdir="${test}" destdir="${build}" includeantruntime="no">
            <classpath refid="libs"/>
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}" excludes="**/*.java"/>
        </copy>
        <copy todir="${build}/Prolog">
            <fileset dir="${prolog}"/>
        </copy>
    </target>

    <!-- run like this to override default values:
    ant run -Dhost=localhost -Dteam=0 -Dswipl=/usr/bin/swipl
    -->
    <target name="run" depends="compile"
            description="Run the BamBird agent (use -D&lt;arg&gt;=&lt;value&gt; to pass arguments).">
        <java classname="main.BamBird">
            <classpath>
                <pathelement path="${build}"/>
            </classpath>
            <classpath refid="libs"/>
            <arg value="${host}"/> <!-- ABServer host -->
            <arg value="${team}"/> <!-- team ID -->
            <arg value="${swipl}"/> <!-- path to SWIPL -->
            <arg value="${level}"/> <!-- level to start with -->
            <arg value="${rounds}"/> <!-- number of rounds to play (Only used if PERFORMANCE_MEASUREMENT_ENABLED) -->
            <arg value="${range}"/> <!-- number of levels to play from start-level -->
        </java>
    </target>

    <target name="dist" depends="compile" description="Package the compiled code and its dependencies in a JAR.">
        <jar destfile="${dist}/BamBird.jar" basedir="${build}">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="main.BamBird"/>
            </manifest>
            <!-- include JARs -->
            <archives>
                <zips>
                    <fileset dir="${lib}" includes="**/*.jar"/>
                </zips>
            </archives>
        </jar>
    </target>

    <target name="dist-zip" depends="clean,dist"
            description="Zip the JAR and the Prolog directory (note: implies 'clean').">
        <copy todir="${dist}/Prolog">
            <fileset dir="${prolog}"/>
        </copy>
        <copy todir="${dist}">
            <file file="ReadmeToRun.txt"/>
        </copy>
        <copy todir="${dist}">
            <file file="doc/agent_description.pdf"/>
        </copy>
        <zip basedir="${dist}" destfile="${dist}/BamBird_${DSTAMP}-${TSTAMP}.zip"/>
    </target>

    <target name="clean" description="Delete directories and files produced during compilation and packaging.">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="clean-all" depends="clean"
            description="Delete directories and files produced during compilation, execution and packaging.">
        <delete>
            <fileset dir="${basedir}" includes="situation*"/>
        </delete>
    </target>

    <!-- TODO: target test (once we have proper tests) -->

    <target name="run-server" description="Execute ABServer.jar (use -D&lt;arg&gt;=&lt;value&gt; to pass arguments).">
        <java jar="game/abV1.33/ABServer.jar" fork="true">
            <arg line="-t ${time}"/> <!-- Execution time since V1.33 -->
            <arg line="-l ${levels}"/>
        </java>
    </target>

    <target name="run-server-old" description="Execute old ABServer.jar.">
        <java jar="game/abV1.32/ABServer.jar" fork="true"/>
    </target>
</project>
